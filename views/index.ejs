<html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
		<link rel="icon" href="images/icon.png" type="image/png"/>
		<link rel="shortcut icon" href="images/icon.png" type="image/png"/>
		<link type="image/x-icon" rel="icon" href="images/icon.png"/>
		<title>Share TXT</title>
		<meta name="robots" content="index,follow"/>
		<meta name="googlebot" content="index,follow"/>
		<meta name="description" content="Share text between browser windows in real time"/>
		<meta name="twitter:card" content="summary_large_image"/>
		<meta name="twitter:site" content="@rexthony"/>
		<meta name="twitter:creator" content="@rexthony"/>
		<meta property="twitter:image" content="images/twitter-card.png"/>
		<meta property="twitter:title" content="Share TXT"/>
		<meta property="og:url" content="http://sharetxt.live/"/>
		<meta property="og:type" content="website"/>
		<meta property="og:title" content="Share text between browser windows in real time"/>
		<meta property="og:description" content="Share text between browser windows in real time."/>
		<meta property="og:image" content="images/twitter-card.png"/>
		<meta property="og:site_name" content="Share TXT"/>
		<meta property="og:locale" content="en_US"/>
		<link rel="canonical" href="http://sharetxt.live/"/>
		<meta name="next-head-count" content="18"/>
		<!--<script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.min.js"></script>-->
		<script data-host="https://qatir.co.uk" data-dnt="false" src="https://qatir.co.uk/js/script.js" id="ZwSg9rf6GA" async defer></script>
		<style>
			@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@500&display=swap');
			body{
				margin: 0;
				padding: 0;
				background-color: rgb(245, 256, 255);
				font-family: 'Roboto Mono', monospace;
			}
			.container{
				text-align: center;
				width: 70%;
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
			}
			h1{
				font-size: 32px;
				color: rgb(50, 50, 50);
			}
			p{
				color: #7DC1C1;
				width: 80%;
				margin: auto;
				line-height: 32px;
			}
			#connectionDetailsC{
				margin-top: 32px;
			}
			#numConnections, #roomName{
				color: #7DC12B;
			}
			#inputC{
				position: relative;
				margin-top: 64px;
			}
			#inputField{
				width: 100%;
				padding: 16px;
				padding-right: 60px;
				font-size: 24px;
				text-align: center;
				border-radius: 16px;
				border: 0;
				border: 1px solid gray;
				outline: none;
			}
			#inputField:focus{
				border: 2px solid gray;
			}
			#copyC{
				position: absolute;
				right: 20px;
				top: 50%;
				transform: translateY(-50%);
				cursor: pointer;
				font-size: 28px;
				color: gray;
				content: url("images/copy.png");
				width: 35px;
				height: 35px;
			}
			#copyC:hover{
				color: #7DC12B;
				content: url("images/copy_active.png");
			}
			button{
				width: 100%;
				padding: 18px 32px;
				margin-top: 42px;
				font-size: 16px;
				border-radius: 16px;
				border: 0;
				background-color: rgb(60, 60, 233);
				color: white;
				letter-spacing: 8px;
				outline: none;
			}
			button:hover{
				cursor: pointer;
				background-color: #7DC12B;
			}
			#version{
				margin-top: 32px;
				font-size: 12px;
				color: rgb(165, 186, 285);
			}
			
			#createdBy{
				margin-top: 32px;
				font-size: 12px;
			}
			
			@media (max-width: 700px){
				.container{
					width: 90%;
				}
				#inputField{
					font-size: 16px;
				}
				#copyC{
					width: 28px;
					height: 28px;
				}
			}
			
			::-moz-selection { /* Code for Firefox */
			  color: white;
			  background: #7DC12B;
			}

			::selection {
			  color: white;
			  background: #7DC12B;
			}
			
			.secondaryColor{
				color: #7DC12B;
			}
		</style>
	</head>

	<body>
		<div class="container">
			<h1>Share TXT</h1>
			<p>Visit this website on two devices or browser windows, enter your text in the field below to share.</p>
			<p id="connectionDetailsC"><span id="numConnections">0 clients</span> connected in <span id="roomName">Default</span></p>
			<div id="inputC">
				<input type="text" id="inputField" placeholder="Type or paste the text to share"/>
				<span id="copyC"></span>
			</div>
			
			<div id="version">v 1.3.0</div>
			
			<a href="https://www.producthunt.com/posts/share-txt?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-share-txt" target="_blank"><img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=284242&theme=light" alt="Share TXT - Share text between browsers in real time | Product Hunt" style="width: 250px; height: 54px; margin-top: 32px;" width="250" height="54" /></a>
			
			<div id="createdBy">Created with <span style="color:red;">&#10084;</span> by <a href="https://twitter.com/rexthony" style="text-decoration: none;"><b class="secondaryColor">@rexthony</b></a></div>
		</div>
	
		<script>
			const ROOM_NAME = "<%= roomName %>";
			
			let numConnectionsElm = document.getElementById("numConnections");
			document.getElementById("roomName").textContent = ROOM_NAME;
			let inputField = document.getElementById("inputField");
			let copyBtn = document.getElementById("copyC");
			
			function establishSocketConnection(){
				let socketUrl =  "wss://rexshare.herokuapp.com/"; //"ws://127.0.0.1:3000";
				let socket = new WebSocket(socketUrl);
				
				let isSocketConnected = false;
				let isLastClientToInputData = false;
				let encryptedMsg = decryptedMsg = "";
				
				socket.onopen = e => {
					isSocketConnected = true;
					//console.log("WebSocket connection established");
					let inputValue = {
						roomName: ROOM_NAME,
						type: 'connection'
					};
					socket.send(JSON.stringify(inputValue));
				};
				
				socket.onclose = e => {
					//console.log("Websocket is closed");
					establishSocketConnection();
				};
				
				socket.onerror = e => {
					console.log("WebSocket error");
				};
				
				socket.onmessage = e => {
					let response = JSON.parse(e.data);
					if(response.type == 'msg'){	
						isLastClientToInputData = false;
						//console.log("received encrypted msg : " + response.msg);
						/*decryptedMsg = CryptoJS.AES.decrypt(response.msg, ROOM_NAME).toString(CryptoJS.enc.Utf8);
						inputField.value = decryptedMsg;*/
						inputField.value = response.msg;
					}else{
						if(response.numUsers == 1){
							numConnectionsElm.textContent = "1 client";
						}else{
							numConnectionsElm.textContent = response.numUsers + " clients";
						}
						
						if(isLastClientToInputData){
							shareInput();
						}
					}
				};
				
				inputField.oninput = () => {
					shareInput();
				};
				
				copyBtn.onclick = () => {
					copyToClipboard(inputField.value);
					inputField.select();
					inputField.setSelectionRange(0, this.inputField.value.length)
				};
				
				function shareInput(){
					if(isSocketConnected){
						isLastClientToInputData = true;
						//encryptedMsg = CryptoJS.AES.encrypt(inputField.value, ROOM_NAME).toString();
						//console.log("sent encrypted msg : " + encryptedMsg);
						let inputValue = {
							type: 'message',
							roomName: ROOM_NAME,
							//text: encryptedMsg
							text: inputField.value
						};
						socket.send(JSON.stringify(inputValue));
					}else{
						console.log("Socket is not yet connected");
						alert("Socket not connected");
					}
				}
				
				function copyToClipboard(text){
					var dummy = document.createElement("textarea");
					document.body.appendChild(dummy);
					dummy.value = text;
					dummy.select();
					document.execCommand("copy");
					document.body.removeChild(dummy);
				}
			}
			
			establishSocketConnection();
		</script>
	</body>
</html>
